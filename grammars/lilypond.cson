"name": "LilyPond"
scopeName: "source.lilypond"
fileTypes: ["ily", "ly"]

patterns: [
  {include: "#comments"}
  {include: "#expression_component"}
]

repository:
  comments:
    patterns: [
      {
        name:  "comment.block.lilypond"
        begin: "%{"
        end:   "%}"
        beginCaptures: 0: name: "punctuation.definition.comment.begin.lilypond"
        endCaptures:   0: name: "punctuation.definition.comment.end.lilypond"
      },{
        name:  "comment.line.lilypond"
        begin: "%"
        end:   "$"
        beginCaptures: 0: name: "punctuation.definition.comment.lilypond"
      }
    ]

  integer:
    patterns: [
      {
        name:  "constant.numeric.integer.lilypond"
        match: "\\d+"
      }
    ]

  expression_component:
    patterns: [
      {
        name:  "meta.expression-block.lilypond"
        begin: "{"
        end:   "}"
        patterns: [
          {include: "#comments"}
          {include: "#expression_component"}
        ]
      }

      {include: "#integer"}

      {
        name:  "string.lilypond"
        begin: '"'
        end:   '"'
        beginCaptures: 0: name: "punctuation.definition.string.begin.lilypond"
        endCaptures:   0: name: "punctuation.definition.string.end.lilypond"
        patterns: [
          { # https://github.com/lilypond/lilypond/blob/stable/2.24/lily/lexer.ll#L189
            name:  "constant.character.escape.lilypond"
            match: "\\\\[nt\"'\\\\]"
          }
        ]
      }

      {
        # https://lilypond.org/doc/Documentation/notation/single-voice#simultaneous-expressions
        name:  "meta.simultaneous-expressions.lilypond"
        begin: "<<"
        end:   ">>"
        beginCaptures: 0: name: "punctuation.simultaneous-expressions.begin.lilypond"
        endCaptures:   0: name: "punctuation.simultaneous-expressions.end.lilypond"
        patterns: [
          {include: "#comments"}
          {include: "#expression_component"}
        ]
      },{
        # https://lilypond.org/doc/Documentation/notation/multiple-voices#-The-double-backslash-construct
        name:  "meta.separator.simultaneous-expressions.lilypond"
        match: "\\\\\\\\"
      }

      {
        name:  "meta.chord.lilypond"
        begin: "<(?!<)"
        end:   "(?<![->])>"
        beginCaptures: 0: name: "punctuation.definition.chord.begin.lilypond"
        endCaptures:   0: name: "punctuation.definition.chord.end.lilypond"
        patterns: [
          {
            name:  "invalid.illegal.lilypond"
            match: "<"
          }
          {include: "#comments"}
          {include: "#expression_component"}
        ]
      },{
        # https://lilypond.org/doc/Documentation/notation/single-voice#chord-repetition
        name:  "keyword.operator.chord-repetition.lilypond"
        match: "(?<![[:alpha:]])q(?!-?[[:alpha:]])"
      }

      {
        name:  "text.note-name.lilypond"
        # To update this regex, paste the result of:
        ###
note_names=$(lilypond --loglevel=ERROR - <<EOS
#(begin
  (display "{")
  (for-each
    (lambda (language)
      (for-each
        (lambda (pitchName) (display "'")(display (car pitchName))(display "',"))
        (ly:assoc-get language language-pitch-names)))
    '(nederlands catalan deutsch english español français italiano norsk portugues suomi svenska vlaams))
  (display "}"))
EOS
)
curl --remote-name --show-error --silent https://raw.githubusercontent.com/pygments/pygments/master/pygments/regexopt.py
python -c '
from regexopt import regex_opt
print(regex_opt('"$note_names"', r"\\b", r"(?!-?[[:alpha:]])").replace("\\-", "-"))
' | pbcopy
rm -fR lilypond
        ###
        match: "\\b(a(?:-(?:flat(?:(?:flat)?)|natural|sharp(?:(?:sharp)?))|e(?:s(?:e(?:[hs])|s(?:(?:e(?:h|ss))?))|[hs])|ff|i(?:s(?:i(?:[hs])|s(?:(?:i(?:h|ss))?))|[hs])|q(?:[fs])|s(?:a(?:[hs])|e(?:[hs])|s(?:(?:e(?:h|ss))?))|tq(?:[fs])|[fhsx])|b(?:-(?:flat(?:(?:flat)?)|natural|sharp(?:(?:sharp)?))|e(?:s(?:e(?:[hs])|s)|[hs])|ff|i(?:si(?:[hs])|[hs])|q(?:[fs])|ss|tq(?:[fs])|[bfsx])|c(?:-(?:flat(?:(?:flat)?)|natural|sharp(?:(?:sharp)?))|e(?:s(?:e(?:[hs])|s(?:(?:e(?:h|ss))?))|[hs])|ff|i(?:s(?:i(?:[hs])|s(?:(?:i(?:h|ss))?))|[hs])|q(?:[fs])|ss|tq(?:[fs])|[fsx])|d(?:-(?:flat(?:(?:flat)?)|natural|sharp(?:(?:sharp)?))|e(?:s(?:e(?:[hs])|s(?:(?:e(?:h|ss))?))|[hs])|ff|i(?:s(?:i(?:[hs])|s(?:(?:i(?:h|ss))?))|[hs])|o(?:b(?:b|hb|qt|sb|tqt)|c(?:[bs])|d(?:(?:(?:s)?)d)|h(?:[bk])|k(?:(?:(?:h)?)k)|q(?:[bds])|s(?:(?:(?:t)?)qt|[bds])|t(?:c(?:[bs])|q(?:[bds]))|[bdksx])|q(?:[fs])|ss|tq(?:[fs])|[fosx])|e(?:-(?:flat(?:(?:flat)?)|natural|sharp(?:(?:sharp)?))|e(?:s(?:e(?:[hs])|s(?:(?:e(?:h|ss))?))|[hs])|ff|i(?:s(?:i(?:[hs])|s(?:(?:i(?:h|ss))?))|[hs])|q(?:[fs])|s(?:e(?:[hs])|s(?:(?:e(?:h|ss))?))|tq(?:[fs])|[fhsx])|f(?:-(?:flat(?:(?:flat)?)|natural|sharp(?:(?:sharp)?))|a(?:b(?:b|hb|qt|sb|tqt)|c(?:[bs])|d(?:(?:(?:s)?)d)|h(?:[bk])|k(?:(?:(?:h)?)k)|q(?:[bds])|s(?:(?:(?:t)?)qt|[bds])|t(?:c(?:[bs])|q(?:[bds]))|[bdksx])|e(?:s(?:e(?:[hs])|s(?:(?:e(?:h|ss))?))|[hs])|ff|i(?:s(?:i(?:[hs])|s(?:(?:i(?:h|ss))?))|[hs])|q(?:[fs])|ss|tq(?:[fs])|[afsx])|g(?:-(?:flat(?:(?:flat)?)|natural|sharp(?:(?:sharp)?))|e(?:s(?:e(?:[hs])|s(?:(?:e(?:h|ss))?))|[hs])|ff|i(?:s(?:i(?:[hs])|s(?:(?:i(?:h|ss))?))|[hs])|q(?:[fs])|ss|tq(?:[fs])|[fsx])|h(?:e(?:h|s(?:e(?:[hs])|se(?:h|ss)))|i(?:s(?:i(?:[hs])|s(?:(?:i(?:h|ss))?))|[hs]))|la(?:(?:b(?:b|hb|qt|sb|tqt)|c(?:[bs])|d(?:(?:(?:s)?)d)|h(?:[bk])|k(?:(?:(?:h)?)k)|q(?:[bds])|s(?:(?:(?:t)?)qt|[bds])|t(?:c(?:[bs])|q(?:[bds]))|[bdksx])?)|mi(?:(?:b(?:b|hb|qt|sb|tqt)|c(?:[bs])|d(?:(?:(?:s)?)d)|h(?:[bk])|k(?:(?:(?:h)?)k)|q(?:[bds])|s(?:(?:(?:t)?)qt|[bds])|t(?:c(?:[bs])|q(?:[bds]))|[bdksx])?)|r(?:e(?:b(?:b|hb|qt|sb|tqt)|c(?:[bs])|d(?:(?:(?:s)?)d)|h(?:[bk])|k(?:(?:(?:h)?)k)|q(?:[bds])|s(?:(?:(?:t)?)qt|[bds])|t(?:c(?:[bs])|q(?:[bds]))|[bdksx])|é(?:b(?:(?:(?:s)?)b)|d(?:(?:(?:s)?)d)|s(?:[bd])|[bdx])|[eé])|s(?:i(?:(?:b(?:b|hb|qt|sb|tqt)|c(?:[bs])|d(?:(?:(?:s)?)d)|h(?:[bk])|k(?:(?:(?:h)?)k)|q(?:[bds])|s(?:(?:(?:t)?)qt|[bds])|t(?:c(?:[bs])|q(?:[bds]))|[bdksx])?)|ol(?:(?:b(?:b|hb|qt|sb|tqt)|c(?:[bs])|d(?:(?:(?:s)?)d)|h(?:[bk])|k(?:(?:(?:h)?)k)|q(?:[bds])|s(?:(?:(?:t)?)qt|[bds])|t(?:c(?:[bs])|q(?:[bds]))|[bdksx])?))|[abcdefgh])(?!-?[[:alpha:]])"
      }
      {
        # https://lilypond.org/doc/Documentation/notation/percussion-notes
        name:  "text.percussion-note.lilypond"
        # To update this regex, paste the result of:
        ###
percussion_note_names=$(lilypond --loglevel=ERROR - <<EOS
#(begin
  (for-each
    (lambda (drumPitchName) (display (car drumPitchName))(newline))
    drumPitchNames))
EOS
)
curl --remote-name --show-error --silent https://raw.githubusercontent.com/pygments/pygments/master/pygments/regexopt.py
python -c '
import re
from regexopt import regex_opt
print(regex_opt("""'"$percussion_note_names"'""".split(), r"\\b",  r"(?!-?[[:alpha:]])"))
'
unset percussion_note_names
        ###
        match: "\\b(a(?:coustic(?:bassdrum|snare)|g(?:[hl]))|b(?:assdrum|d(?:(?:a)?)|o(?:h(?:[mo])|l(?:[mo])|[hl]))|c(?:ab(?:(?:asa)?)|g(?:h(?:[mo])|l(?:[mo])|[hl])|hinesecymbal|l(?:aves|osedhihat)|owbell|rashcymbal(?:(?:[ab])?)|ui(?:[mo])|ym(?:c(?:[abh])|r(?:[ab])|[crs])|[bl])|d(?:[abcde])|electricsnare|f(?:ive(?:down|up)|our(?:down|up))|gui(?:(?:ro|[ls])?)|h(?:a(?:lfopenhihat|ndclap)|h(?:ho|[cop])|i(?:agogo|bongo|conga|gh(?:(?:(?:floor)?)tom)|hat|midtom|sidestick|timbale|woodblock)|[ch])|lo(?:agogo|bongo|conga|ng(?:guiro|whistle)|sidestick|timbale|w(?:floortom|midtom|oodblock|tom))|m(?:ar(?:(?:acas)?)|ute(?:cuica|hi(?:bongo|conga)|lo(?:bongo|conga)|triangle))|o(?:ne(?:down|up)|pen(?:cuica|hi(?:bongo|conga|hat)|lo(?:bongo|conga)|triangle))|pedalhihat|r(?:b|ide(?:bell|cymbal(?:(?:[ab])?)))|s(?:hort(?:guiro|whistle)|idestick|n(?:are|[ae])|plashcymbal|s(?:[hl])|[ns])|t(?:amb(?:(?:ourine)?)|hree(?:down|up)|im(?:[hl])|om(?:f(?:[hl])|m(?:[hl])|[hl])|ri(?:(?:angle|[mo])?)|t|wo(?:down|up))|u(?:[abcde])|vib(?:raslap|s)|w(?:b(?:[hl])|h(?:[ls])))(?!-?[[:alpha:]])"
      }
      {
        # https://lilypond.org/doc/Documentation/notation/writing-rests
        name:  "text.rest.lilypond"
        match: "\\b[rRs](?!-?[[:alpha:]])"
      }

      {
        name:  "meta.chord-mode.lilypond"
        begin: "\\\\chordmode(?!-?[[:alpha:]])"
        end:   "(?<=[^%]})|(?<=^})"
        beginCaptures: 0: name: "keyword.other.lilypond"
        patterns: [
          {include: "#chord_expression"}
          {include: "$self"}
        ]
      },{
        name:  "meta.figure-mode.lilypond"
        begin: "\\\\figure(?:mode|s)(?!-?[[:alpha:]])"
        end:   "(?<=[^%]})|(?<=^})"
        beginCaptures: 0: name: "keyword.other.lilypond"
        patterns: [
          {include: "#figure_expression"}
          {include: "$self"}
        ]
      },{
        name:  "meta.paper-block.lilypond"
        begin: "\\\\paper(?!-?[[:alpha:]])"
        end:   "(?<=[^%]})|(?<=^})"
        beginCaptures: 0: name: "keyword.other.lilypond"
        patterns: [
          {include: "#paper_expression"}
          {include: "$self"}
        ]
      },{
        name:  "keyword.other.lilypond"
        # To update this regex, paste the result of:
        ###
curl --remote-name --show-error --silent https://raw.githubusercontent.com/pygments/pygments/master/pygments/regexopt.py
curl --remote-name --show-error --silent https://raw.githubusercontent.com/pygments/pygments/master/pygments/lexers/_lilypond_builtins.py
python -c '
import re
from _lilypond_builtins import keywords
from regexopt import regex_opt
for item in ["inherit-acceptability", "language"]:
    keywords.remove(item)
keywords.extend(["alternative", "change", "default", "lyrics", "maininput", "markup", "markuplist", "override", "repeat", "rest", "revert", "sequential", "set", "simultaneous", "tempo", "unset"])
print(regex_opt(keywords, r"\\\\", r"(?!-?[[:alpha:]])"))
' | pbcopy
        ###
        match: "\\\\(a(?:ccepts|ddlyrics|l(?:ias|ternative))|book(?:(?:part)?)|c(?:h(?:ange|ord(?:mode|s))|on(?:sists|text))|d(?:e(?:fault(?:(?:child)?)|nies|scription)|rum(?:mode|s))|etc|figure(?:mode|s)|header|include|l(?:ayout|yric(?:mode|s(?:(?:to)?)))|m(?:a(?:ininput|rkup(?:(?:list)?))|idi)|n(?:ame|ew|otemode)|override|paper|re(?:move|(?:pea|s|ver)t)|s(?:core|e(?:quential|t)|imultaneous)|t(?:empo|ype)|unset|version|with)(?!-?[[:alpha:]])"
      },{
        name:  "support.function.lilypond"
        # To update this regex, paste the result of:
        ###
git clone https://git.savannah.gnu.org/git/lilypond.git
git checkout tags/v2.24.4
curl --remote-name --show-error --silent https://raw.githubusercontent.com/pygments/pygments/master/pygments/regexopt.py
curl --remote-name --show-error --silent https://raw.githubusercontent.com/pygments/pygments/master/pygments/lexers/_lilypond_builtins.py
python -c '
import re
from _lilypond_builtins import articulations, dynamics, music_commands, music_functions, scales
from regexopt import regex_opt
for item in ["=", "alternative", "change", "override", "repeat", "revert", "set", "tempo", "unset"]:
    music_functions.remove(item)
music_objects = set(music_functions).union(articulations).union(dynamics).union(music_commands).union(scales)
for item in ["!", "(", ")", "-", "<", ">", "[", "]", "^", "|", "~"]:
    music_objects.remove(item)
for path in ["lilypond/ly/declarations-init.ly",
             "lilypond/ly/music-functions-init.ly",
             "lilypond/ly/toc-init.ly",
             "lilypond/ly/drumpitch-init.ly",
             "lilypond/ly/chord-modifiers-init.ly",
             "lilypond/ly/string-tunings-init.ly",
             "lilypond/ly/context-mods-init.ly"]:
    with open(path) as file:
        for match in re.finditer("^(?:([A-Za-z]+)|\"([A-Za-z]+)\")\\s*=", file.read(), re.MULTILINE):
            if (match.group(1)):
                music_objects.add(match.group(1))
            else:
                music_objects.add(match.group(2))
print(regex_opt(music_objects, r"\\\\", r"(?!-?[[:alpha:]])"))
' | pbcopy
        ###
        match: "\\\\(EnableGregorianDivisiones|Remove(?:(?:(?:All)?)EmptyStaves)|a(?:bsolute|cc(?:ent|i(?:accatura|dentalStyle))|dd(?:ChordShape|InstrumentDefinition|Quote)|eolian|fter(?:(?:Grace(?:(?:Fraction)?))?)|iken(?:Heads(?:(?:Minor)?)|ThinHeads(?:(?:Minor)?))|l(?:low(?:Break|PageTurn|VoltaHook)|terBroken)|mbitusAfter|pp(?:endToTag|ly(?:Context|Music|Output)|oggiatura)|r(?:abicStringNumbers|peggio(?:(?:Arrow(?:Down|Up)|Bracket|Normal|Parenthesis(?:(?:Dashed)?))?))|ssertBeam(?:Quant|Slope)|uto(?:B(?:eamO(?:ff|n)|reaksO(?:ff|n))|Change|LineBreaksO(?:ff|n)|PageBreaksO(?:ff|n)))|b(?:a(?:lloon(?:GrobText|LengthO(?:ff|n)|Text)|r(?:(?:NumberCheck)?)|ssFigure(?:ExtendersO(?:ff|n)|StaffAlignment(?:Down|Neutral|Up)))|e(?:amExceptions|nd(?:After|Hold|StartLevel))|igger|lackTriangleMarkup|ookOutput(?:Name|Suffix)|re(?:a(?:k(?:(?:DynamicSpan)?)|the)|ve))|c(?:a(?:denzaO(?:ff|n)|esura)|enter|hord(?:(?:Repeat|modifier)s)|lef|o(?:da(?:(?:Mark)?)|mp(?:oundMeter|ress(?:(?:EmptyMeasure|MMRest)s)))|r(?:(?:esc(?:(?:Hairpin|TextCresc)?)|ossStaff)?)|ue(?:Clef(?:(?:Unset)?)|During(?:(?:WithClef)?)))|d(?:ash(?:Bang|D(?:ash|ot)|Hat|Larger|Plus|Underscore)|e(?:adNote(?:(?:sO(?:ff|n))?)|cr(?:(?:esc)?)|f(?:ault(?:NoteHeads|StringTunings|TimeSignature)|ineBarLine)|precated(?:cresc|dim|end(?:cresc|dim)))|i(?:m(?:(?:Hairpin|TextD(?:ecr(?:(?:esc)?)|im))?)|splay(?:LilyMusic|Music|Scheme))|o(?:rian|ts(?:Down|Neutral|Up)|wn(?:(?:bow|mordent|prall)?))|r(?:opNote|umPitchNames)|ynamic(?:Down|Neutral|Up))|e(?:asyHeadsO(?:ff|n)|n(?:ablePolymeter|d(?:S(?:(?:kipNC|panner)s)|cr(?:(?:esc)?)|d(?:ecr(?:(?:esc)?)|im)))|pisem(?:Finis|Initium)|spressivo|(?:ventChord|xpandEmptyMeasure)s)|f(?:e(?:atherDurations|rmata)|ff(?:(?:f(?:(?:f)?))?)|i(?:n(?:e|ger)|xed)|lageolet|ootnote|renchChords|unkHeads(?:(?:Minor)?)|[fpz])|g(?:ermanChords|li(?:de|ssando)|r(?:ace|obdescriptions))|h(?:a(?:lfopen|rmonic(?:(?:By(?:Fret|Ratio)|Note|sO(?:ff|n))?)|ydnturn)|enze(?:(?:long|short)fermata)|ide(?:(?:Notes|S(?:plitTiedTabNotes|taffSwitch))?)|uge)|i(?:gnatzekException(?:Music|s)|mprovisationO(?:ff|n)|n(?:StaffSegno|cipit|herit\-acceptability|strumentSwitch|ver(?:sion|tChords))|onian|talianChords)|jump|k(?:e(?:epWithTag|y)|i(?:evanO(?:ff|n)|llCues))|l(?:a(?:bel|issezVibrer|(?:nguag(?:(?:e(?:Restor|SaveAndChang))?)|rg)e)|eft|heel|ineprall|o(?:crian|ng(?:(?:(?:fermat)?)a))|toe|ydian)|m(?:a(?:gnify(?:Music|Staff)|jor|ke(?:Clusters|DefaultStringTuning)|r(?:cato|k(?:(?:LengthO(?:ff|n)|upMap)?))|xima)|e(?:dianChordGridStyle|lisma(?:(?:End)?)|rgeDifferently(?:DottedO(?:ff|n)|HeadedO(?:ff|n)))|i(?:diDrumPitches|nor|xolydian)|o(?:dal(?:Inversion|Transpose)|rdent)|usicMap|[fp])|n(?:ewSpacingSection|o(?:B(?:eam|reak)|Page(?:Break|Turn)|rmalsize)|umericTimeSignature)|o(?:ctaveCheck|ffset|mit|n(?:(?:(?:eVoi)?)ce)|pen|ttava|verride(?:Property|TimeSignatureSettings))|p(?:a(?:ge(?:Break|Turn)|lmMute(?:(?:O(?:ff|n))?)|r(?:allelMusic|enthesize|t(?:Combine(?:(?:A(?:part|utomatic)|Chords|Down|Force|Listener|SoloI(?:(?:I)?)|U(?:nisono|p))?)|ial)))|hr(?:asingSlur(?:D(?:ash(?:Pattern|ed)|o(?:tted|wn))|Half(?:(?:Dashe|Soli)d)|Neutral|Solid|Up)|ygian)|itchedTrill|o(?:intAndClick(?:O(?:ff|n)|Types)|rtato)|p(?:(?:p(?:(?:p(?:(?:p)?))?))?)|r(?:all(?:(?:down|mordent|prall|up)?)|e(?:Bend(?:(?:Hold)?)|definedFretboardsO(?:ff|n))|operty(?:Override|Revert|Set|Tweak|Unset))|ushToTag)|quoteDuring|r(?:aiseNote|e(?:duceChords|lative|moveWithTag|peatTie|setRelativeOctave|trograde|ver(?:seturn|tTimeSignatureSettings))|fz|heel|ight(?:(?:HandFinger)?)|omanStringNumbers|toe)|s(?:acredHarpHeads(?:(?:Minor)?)|caleDurations|e(?:ction(?:(?:Label)?)|gno(?:(?:Mark)?)|miGermanChords|t(?:DefaultDurationToQuarter|tingsFrom))|f(?:[fpz])|h(?:ape|ift(?:Durations|O(?:ff|n(?:(?:n(?:(?:n)?))?)))|o(?:rtfermata|wS(?:plitTiedTabNotes|taffSwitch)))|i(?:(?:gnumcongruentia|ngl)e)|kip(?:(?:NC(?:(?:s)?))?)|l(?:ash(?:edGrace|turn)|ur(?:D(?:ash(?:Pattern|ed)|o(?:tted|wn))|Half(?:(?:Dashe|Soli)d)|Neutral|Solid|Up))|mall(?:(?:er)?)|nappizzicato|o(?:stenutoO(?:ff|n)|uthernHarmonyHeads(?:(?:Minor)?))|pp|t(?:a(?:ccat(?:(?:(?:issim)?)o)|ffHighlight|rt(?:(?:A(?:(?:cciacc|ppoggi)aturaMusic)|Gr(?:ace(?:Music|Slur)|oup)|Measure(?:Count|Spanner)|S(?:lashedGraceMusic|taff)|T(?:(?:ext|rill)Span))?))|em(?:Down|Neutral|Up)|o(?:p(?:(?:A(?:(?:cciacc|ppoggi)aturaMusic)|Gr(?:ace(?:Music|Slur)|oup)|Measure(?:Count|Spanner)|S(?:lashedGraceMusic|taff(?:(?:Highlight)?))|T(?:(?:ext|rill)Span)|ped)?)|rePredefinedDiagram)|ringTuning|yledNoteHeads)|ustainO(?:ff|n)|[fp])|t(?:a(?:b(?:ChordRepe(?:ats|tition)|FullNotation)|g(?:(?:Group)?))|e(?:eny|mporary|nuto|xt(?:EndMark|LengthO(?:ff|n)|Mark|Spanner(?:Down|Neutral|Up)))|humb|i(?:e(?:D(?:ash(?:Pattern|ed)|o(?:tted|wn))|Half(?:(?:Dashe|Soli)d)|Neutral|Solid|Up)|me(?:(?:s)?)|ny)|ocItem(?:(?:WithDotsMarkup)?)|r(?:anspos(?:e(?:(?:dCueDuring)?)|ition)|eCorde|ill)|u(?:plet(?:(?:Down|Neutral|Span|Up)?)|rn)|weak)|u(?:n(?:HideNotes|aCorda|do|fold(?:Repeats|ed))|p(?:(?:bow|mordent|prall)?))|v(?:arcoda|ery(?:(?:long|short)fermata)|o(?:i(?:ce(?:Four(?:(?:Style)?)|NeutralStyle|One(?:(?:Style)?)|T(?:hree(?:(?:Style)?)|wo(?:(?:Style)?))|s)|d)|lta|welTransition)|shape)|w(?:alkerHeads(?:(?:Minor)?)|hite(?:(?:Circ|Triang)leMarkup)|ithMusicProperty)|xNote(?:(?:sO(?:ff|n))?)|[fnp])(?!-?[[:alpha:]])"
        # This is similar to the entity.name.class.keyword.lilypond regex
        # pattern of AtLilyPond (https://atom.io/packages/atlilypond), which
        # appears to be based on the output of a Python script included with
        # LilyPond:
        #
        # https://github.com/lilypond/lilypond/blob/master/scripts/build/lilypond-words.py
        #
        # For a list of “keywords” that are matched by AtLilyPond but not the
        # regex above, run:
        #
        ###
curl --remote-name --show-error --silent https://raw.githubusercontent.com/yrammos/AtLilyPond/master/grammars/lilypond-internals.cson
npm install cson
additional_matches=$(node --eval='
const CSON = require("cson");
const regexPattern = CSON.load("lilypond-internals.cson").patterns[3].match;
const substring = "\\\\(";
const startIndex = regexPattern.indexOf(substring) + substring.length;
const endIndex = regexPattern.indexOf(")", startIndex);
const commands = new Set(regexPattern.substring(startIndex, endIndex).split("|"));
for (const command of '"$LilyPond_commands"') {
  commands.delete(command);
}
console.log(`["${Array.from(commands).sort().join("\",\"")}"]`);
')
echo $additional_matches
        ###
        #
        # This list includes markup commands. To remove these, run:
        #
        ###
additional_matches=$(python -c '
import re
additional_matches = '"$additional_matches"'
additional_matches.remove("table-of-contents")
for path in ["lilypond/scm/define-markup-commands.scm",
             "lilypond/scm/fret-diagrams.scm",
             "lilypond/scm/harp-pedals.scm"]:
    with open(path) as file:
        for match in re.finditer(r"\(define-markup(?:-list)?-command\s*\(([-A-Za-z]+)", file.read(), re.MULTILINE):
            try:
                additional_matches.remove(match.group(1))
            except ValueError:
                pass
print("[" + ",".join(["\"" + match + "\"" for match in additional_matches]) + "]")
')
echo $additional_matches
        ###
        #
        # A few matches are keywords from lily/lily-lexer.cc. To remove these,
        # run:
        #
        ###
additional_matches=$(python -c '
import re
additional_matches = '"$additional_matches"'
additional_matches.remove("include")
additional_matches.remove("maininput")
additional_matches.remove("version")
with open("lilypond/lily/lily-lexer.cc") as file:
    for match in re.finditer("\\s*\\{\"([^\"]+)\",\\s*\\w+\\},", file.read(), re.MULTILINE):
        if match.group(1) in additional_matches:
            additional_matches.remove(match.group(1))
print("[" + ",".join(["\"" + match + "\"" for match in additional_matches]) + "]")
')
echo $additional_matches
        ###
        #
        # Many matches are from:
        #
        # * ly/engraver-init.ly, which is \include’d in a \layout block
        # (https://lilypond.org/doc/Documentation/notation/the-layout-block)
        # in ly/declarations-init.ly (so matches from ly/engraver-init.ly aren’t
        # actually built-in commands)
        #
        # * ly/performer-init.ly, which is \include’d in a \midi block in
        # ly/midi-init.ly, which is in turn \include’d in
        # ly/declarations-init.ly
        #
        # To remove matches from ly/engraver-init.ly and ly/performer-init.ly,
        # run:
        #
        ###
additional_matches=$(python -c '
import re
additional_matches = '"$additional_matches"'
for path in ["lilypond/ly/engraver-init.ly",
             "lilypond/ly/performer-init.ly"]:
    with open(path) as file:
        for match in re.finditer(r"^\s*([A-Za-z]+)\s*=", file.read(), re.MULTILINE):
            if match.group(1) in additional_matches:
                additional_matches.remove(match.group(1))
print("[" + ",".join(["\"" + match + "\"" for match in additional_matches]) + "]")
')
echo $additional_matches
        ###
        #
        # A few other matches are from ly/gregorian.ly, which isn’t loaded by
        # LilyPond by default. To remove these matches, run:
        #
        ###
additional_matches=$(python -c '
import re
additional_matches = '"$additional_matches"'
with open("lilypond/ly/gregorian.ly") as file:
    for match in re.finditer(r"^\s*([A-Za-z]+)\s*=", file.read(), re.MULTILINE):
        if match.group(1) in additional_matches:
            additional_matches.remove(match.group(1))
print("[" + ",".join(["\"" + match + "\"" for match in additional_matches]) + "]")
')
echo $additional_matches
        ###
        #
        # Remaining matches don’t appear to be keywords or built-in commands.
      },{
        name:  "support.function.markup.lilypond"
        # To update this regex, paste the result of:
        ###
curl --remote-name --show-error --silent https://raw.githubusercontent.com/pygments/pygments/master/pygments/regexopt.py
curl --remote-name --show-error --silent https://raw.githubusercontent.com/pygments/pygments/master/pygments/lexers/_lilypond_builtins.py
python -c '
import re
from _lilypond_builtins import markup_commands
from regexopt import regex_opt
for item in ["markup", "markuplist", "override", "score"]:
    markup_commands.remove(item)
print(regex_opt(markup_commands, r"\\\\", r"(?!-?[[:alpha:]])"))
' | pbcopy
        ###
        match: "\\\\(a(?:bs\-fontsize|ccidental|lign\-on\-other|rrow\-head|uto\-footnote)|b(?:ackslashed\-digit|eam|o(?:ld|x)|racket)|c(?:aps|enter\-(?:(?:alig|colum)n)|har|ircle|o(?:da|lumn(?:(?:\-lines)?)|m(?:bine|pound\-meter)|n(?:cat|ditional\-trill\-markup))|ustomTabClef)|d(?:i(?:r\-column|scant)|ouble(?:flat|sharp)|raw\-(?:(?:circl|(?:(?:d(?:(?:ash|ott)ed\-)|h|squiggle\-)?)lin)e)|ynamic)|e(?:llipse|psfile|yeglasses)|f(?:ermata|i(?:gured\-bass|ll(?:\-(?:line|with\-pattern)|ed\-box)|nger|rst\-visible)|lat|o(?:nt(?:Caps|size)|otnote)|r(?:action|e(?:eBass|t\-diagram(?:(?:\-(?:(?:ter|verbo)se))?))|omproperty))|general\-align|h(?:a(?:lign|rp\-pedal)|bracket|center\-in|(?:spac|ug)e)|i(?:f|talic)|justif(?:ied\-lines|y(?:(?:\-(?:field|line|string))?))|l(?:arge(?:(?:r)?)|eft\-(?:align|brace|column)|ine|o(?:okup|wer))|m(?:a(?:gnify|p\-markup\-commands|rk(?:alphabet|letter))|edium|u(?:lti\-measure\-rest\-by\-number|sicglyph))|n(?:atural|o(?:rmal(?:\-(?:size\-su(?:b|per)|text)|size)|te(?:(?:\-by\-number)?))|u(?:ll|mber))|o(?:n\-the\-fly|v(?:al|er(?:lay|ride\-lines|tie)))|p(?:a(?:d\-(?:around|markup|(?:(?:to\-bo)?)x)|ge\-(?:link|ref)|renthesize|t(?:h|tern))|o(?:lygon|stscript)|roperty\-recursive|ut\-adjacent)|r(?:aise|e(?:place|st(?:(?:\-by\-number)?))|hythm|ight\-(?:align|brace|column)|o(?:man|tate|unded\-box))|s(?:ans|c(?:ale|ore\-lines)|e(?:gno|mi(?:flat|sharp)|squi(?:flat|sharp))|harp|imple|lashed\-digit|mall(?:(?:Caps|er)?)|t(?:dBass(?:(?:IV|V(?:(?:I)?))?)|encil|r(?:ing\-lines|ut))|u(?:b|per))|t(?:able(?:(?:\-of\-contents)?)|e(?:eny|xt)|i(?:e(?:(?:d\-lyric)?)|ny)|r(?:ans(?:late(?:(?:\-scaled)?)|parent)|iangle)|ypewriter)|u(?:n(?:der(?:(?:lin|ti)e)|less)|pright)|v(?:arcoda|center|(?:erbatim\-fil|spac)e)|w(?:hiteout|ith\-(?:color|dimension(?:(?:\-from|s(?:(?:\-from)?))?)|link|outline|string\-transformer|true\-dimension(?:(?:s)?)|url)|o(?:odwind\-diagram|rdwrap(?:(?:\-(?:field|internal|lines|string(?:(?:\-internal)?)))?))))(?!-?[[:alpha:]])"
      },{
        name:  "variable.other.lilypond"
        match: "\\\\[[:alpha:]]+(?:-[[:alpha:]]+)*"
      }

      {
        # raise octave
        name:  "punctuation.apostrophe.lilypond"
        match: "'"
      },{
        # lower octave
        name:  "punctuation.comma.lilypond"
        match: ","
      },{
        # cautionary accidental
        name:  "punctuation.question-mark.lilypond"
        match: "\\?"
      },{
        # reminder accidental, figured-bass natural
        name:  "punctuation.exclamation-point.lilypond"
        match: "!"
      },{
        # property access, staccato
        name:  "punctuation.dot.lilypond"
        match: "\\."
      },{
        # assignment, metronome marks, octave checking
        name:  "keyword.operator.equals-sign.lilypond"
        match: "="
      },{
        name:  "keyword.operator.multiplication.lilypond"
        match: "\\*"
      },{
        # place neutrally, figured-bass flat
        name:  "punctuation.hyphen.lilypond"
        match: "-"
      },{
        # place above
        name:  "punctuation.caret.lilypond"
        match: "\\^"
      },{
        # place below
        name:  "punctuation.underscore.lilypond"
        match: "_"
      },{
        # accent
        name:  "punctuation.greater-than-sign.lilypond"
        match: ">"
      },{
        # figured-bass sharp
        name:  "punctuation.plus-sign.lilypond"
        match: "\\+"
      },{
        # fraction delimiter, tuplet division, chord inversion
        name:  "keyword.operator.forward-slash.lilypond"
        match: "/(?!\\+)"
      }
      # https://lilypond.org/doc/Documentation/notation/writing-rhythms#ties
      {
        name:  "punctuation.tilde.lilypond"
        match: "~"
      }
      # https://lilypond.org/doc/Documentation/notation/beams#manual-beams
      {
        name:  "keyword.operator.beam.begin.lilypond"
        match: "\\["
      },{
        name:  "keyword.operator.beam.end.lilypond"
        match: "\\]"
      }
      # https://lilypond.org/doc/Documentation/notation/bars#bar-and-bar-number-checks
      {
        name:  "keyword.operator.bar-check.lilypond"
        match: "\\|"
      }
      # https://lilypond.org/doc/Documentation/notation/expressive-marks-attached-to-notes#dynamics
      {
        name:  "keyword.operator.dynamic-mark.begin.crescendo.lilypond"
        match: "\\\\<"
      },{
        name:  "keyword.operator.dynamic-mark.begin.decrescendo.lilypond"
        match: "\\\\>"
      },{
        name:  "keyword.operator.dynamic-mark.end.lilypond"
        match: "\\\\!"
      }
      # https://lilypond.org/doc/Documentation/notation/expressive-marks-as-curves#slurs
      {
        name:  "keyword.operator.slur.begin.lilypond"
        match: "\\("
      },{
        name:  "keyword.operator.slur.end.lilypond"
        match: "\\)"
      },{
        name:  "keyword.operator.phrasing-slur.begin.lilypond"
        match: "\\\\\\("
      },{
        name:  "keyword.operator.phrasing-slur.end.lilypond"
        match: "\\\\\\)"
      },{
        name:  "meta.slur-label.lilypond"
        begin: "\\\\="
        end:   "(?=\\\\?[()])"
        beginCaptures: 0: name: "entity.punctuation.slur-label.lilypond"
        patterns: [
          {include: "#comments"}
          {
            name:  "entity.name.slur-label.lilypond"
            match: "[-\\w]+"
          },{
            name:  "string.lilypond"
            begin: '"'
            end:   '"'
            beginCaptures: 0: name: "punctuation.definition.string.begin.lilypond"
            endCaptures:   0: name: "punctuation.definition.string.end.lilypond"
            contentName: "entity.name.slur-label.lilypond"
            patterns: [
              { # https://github.com/lilypond/lilypond/blob/stable/2.24/lily/lexer.ll#L189
                name:  "constant.character.escape.lilypond"
                match: "\\\\[nt\"'\\\\]"
              }
            ]
          }
        ]
      }
      # https://lilypond.org/doc/Documentation/notation/common-notation-for-fretted-strings#string-number-indications
      {
        name:  "keyword.operator.string-number-indicator.lilypond"
        match: "\\\\(?=\\d)"
      }
      # https://lilypond.org/doc/Documentation/notation/ancient-notation_002d_002dcommon-features#ligatures
      {
        # LilyPond’s documentation seems to indicate that a \ligature function
        # in gregorian.ly is preferred.
        name:  "invalid.deprecated.ligature.begin.lilypond"
        match: "\\\\\\["
      },{
        name:  "invalid.deprecated.ligature.end.lilypond"
        match: "\\\\\\]"
      }

      {
        name:  "meta.scheme.lilypond"
        begin: "(?:(#)|(\\$)|([#$]@))"
        end:   "(?<=[\\w)}])|$"
        beginCaptures:
          1: name: "keyword.operator.scheme.embed.lilypond"
          2: name: "keyword.operator.scheme.evaluate.lilypond"
          3: name: "keyword.operator.scheme.list-splice.lilypond"
        patterns: [
          {
            name:  "meta.scheme-comments.lilypond"
            begin: "\\G(?: +|$)"
            end:   "(?! |$|#?;)"
            patterns: [
              {
                name:  "comment.line.lilypond-scheme"
                begin: "#?;"
                end:   "$"
                beginCaptures: 0: name: "punctuation.definition.comment.lilypond"
              }
            ]
          }
          {include: "#scheme_embedded_lilypond"}
          {
            name:  "meta.scheme-datum.lilypond"
            begin: "(?! |$|#?;)"
            end:   "(?=\\s)|$"
            patterns: [
              {include: "#scheme_expression"}
              {include: "source.lisp"}
            ]
          }
        ]
      }
    ]

  chord_expression:
    patterns: [
      {
        name:  "meta.chord-expression.lilypond"
        begin: "{"
        end:   "}"
        patterns: [
          {include: "#chord_mode_notation"}
          {include: "#octave_transpose_operators"}
          # https://lilypond.org/doc/Documentation/notation/chord-mode
          {
            name:  "keyword.operator.chord.modifier-indicator.lilypond"
            match: ":"
          },{
            name:  "keyword.other.chord.modifier.lilypond"
            match: "\\b(?:aug|dim|m(?:aj)?|sus)"
          },{
            name:  "keyword.operator.chord.alter-note.flat.lilypond"
            match: "-"
          },{
            name:  "keyword.operator.chord.alter-note.sharp.lilypond"
            match: "\\+"
          },{
            name:  "keyword.operator.chord.remove-note.lilypond"
            match: "\\^"
          },{
            name:  "keyword.operator.chord.add-bass-note.lilypond"
            match: "/\\+"
          }
          {include: "#chord_expression"}
          {include: "$self"}
        ]
      }
    ]

  figure_expression_contents:
    patterns: [
      {
        name:  "invalid.illegal.lilypond"
        match: "<"
      }
      {include: "#integer"}
      {include: "#comments"}
      {
        name:  "keyword.operator.figure.accidental.sharp.lilypond"
        match: "\\+"
      },{
        name:  "keyword.operator.figure.accidental.flat.lilypond"
        match: "-"
      },{
        name:  "keyword.operator.figure.accidental.natural.lilypond"
        match: "!"
      },{
        name:  "support.variable.figure.hidden-third.lilypond"
        match: "_"
      },{
        name:  "keyword.operator.figure.augmented.lilypond"
        match: "\\\\\\+"
      },{
        name:  "keyword.operator.figure.diminished.lilypond"
        match: "/"
      },{
        name:  "keyword.operator.figure.raised-sixth.lilypond"
        match: "\\\\\\\\"
      },{
        name:  "keyword.operator.figure.end-continuation-line.lilypond"
        match: "\\\\!"
      }
    ]

  figure_expression:
    patterns: [
      {
        name:  "meta.figure-expression.lilypond"
        begin: "{"
        end:   "}"
        patterns: [
          # https://lilypond.org/doc/Documentation/notation/figured-bass#entering-figured-bass
          {
            name:  "meta.figure-group.lilypond"
            begin: "<"
            end:   ">"
            beginCaptures: 0: name: "punctuation.definition.figure-group.begin.lilypond"
            endCaptures:   0: name: "punctuation.definition.figure-group.end.lilypond"
            patterns: [
              {include: "#figure_expression_contents"}
              {
                name:  "meta.figure-bracket.lilypond"
                begin: "\\["
                end:   "\\]"
                beginCaptures: 0: name: "punctuation.definition.figure-bracket.begin.lilypond"
                endCaptures:   0: name: "punctuation.definition.figure-bracket.end.lilypond"
                patterns: [
                  {
                    name:  "invalid.illegal.lilypond"
                    match: "[>\\[]"
                  }
                  {include: "#figure_expression_contents"}
                ]
              }
            ]
          }
          {include: "#figure_expression"}
          {include: "$self"}
        ]
      }
    ]

  paper_expression:
    patterns: [
      {
        name:  "meta.paper-expression.lilypond"
        begin: "{"
        end:   "}"
        patterns: [
          # https://lilypond.org/doc/Documentation/notation/the-paper-block
          {
            name:  "support.constant.lilypond"
            match: "\\\\(?:[cm]m|in|pt)(?!-?[[:alpha:]])"
          }
          {include: "#paper_expression"}
          {include: "$self"}
        ]
      }
    ]

  scheme_expression:
    patterns: [
      {
        name:  "meta.scheme-expression.lilypond"
        begin: "\\("
        end:   "\\)"
        patterns: [
          {
            name:  "support.function.lilypond-scheme"
            # To update this regex, paste the result of:
            ###
curl --remote-name --show-error --silent https://raw.githubusercontent.com/pygments/pygments/master/pygments/regexopt.py
curl --remote-name --show-error --silent https://raw.githubusercontent.com/pygments/pygments/master/pygments/lexers/_lilypond_builtins.py
python -c '
import re
from _lilypond_builtins import scheme_functions
from regexopt import regex_opt
print(re.sub(r"\\(.)", r"\\\\\1", regex_opt(scheme_functions, r"(?<!-)\b", r"(?!-?[[:alpha:]])").replace("\\-", "-")))
' | pbcopy
            ###
            match: "(?<!-)\\b(!=|\\*(?:(?:location|parser)\\*)|Alteration_glyph_engraver|B(?:(?:e(?:at_perform|nd_spanner_engrav)|reathing_sign_engrav)er)|C(?:(?:entered_bar_number_align|hord_(?:(?:nam|squar)e)|urrent_chord_text)_engraver)|D(?:(?:ivisio|uration_line)_engraver)|Finger_glide_engraver|G(?:_|rid_chord_name_engraver)|Lyric_repeat_count_engraver|Me(?:(?:asure_(?:(?:count|spann)er)|rge_(?:(?:mmrest_number|rest)s))_engraver)|S(?:(?:how_control_points|ignum_repetitionis|kip_typesetting|pan(?:_stem|ner_tracking)|taff_highlight)_engraver)|T(?:(?:ext_mark|rill_spanner)_engraver)|_i|a(?:bs-fontsize-markup|ccidental-(?:>markup(?:(?:-italian)?)|in(?:terface::calc-(?:alteration|glyph-name)|valid\\?)|markup)|d(?:d-(?:bar-glyph-print-procedure|font|grace-property|music(?:(?:-fonts)?)|new-clef|p(?:ango-fonts|oint)|quotable|s(?:core|imple-time-signature-style|troke-(?:glyph|straight))|text)|just-slash-stencil)|l(?:i(?:gn(?:-on-other-markup|ed-text-stencil-function)|st(?:->hash-table|(?:(?:<)?)\\?))|l(?:-(?:bar-numbers-visible|equal\\?|repeat-counts-visible)|ow-volta-hook)|teration(?:->text-accidental-markup|s-in-key))|mbitus(?:-line::calc-gap|::print)|n(?:alyse-spanner-states|cestor-lookup-initialize|gle-0-(?:2pi|360)|notate-(?:spacing-spec|y-interval)|y-mmrest-events)|pply-(?:(?:duration|group-draw-rule-serie)s)|rrow-(?:head-markup|stencil(?:(?:-maker)?))|ss(?:emble-stencils|oc-(?:get|(?:key|value)s))|t-bar-line-substitute-caesura-type|u(?:g-modifier|to-footnote-markup)|verage)|b(?:a(?:ckslashed-digit-markup|r-line::(?:bar-y-extent|c(?:alc-(?:b(?:lot|reak-visibility)|glyph-name(?:(?:-for-direction)?))|ompound-bar-line)|draw-filled-box|widen-bar-extent-on-span)|s(?:e-length|s(?:-clarinet-rh-ees-key-stencil|oon-(?:bend-info-maker|cc-six-key-stencil|lh-(?:(?:a-flick|c(?:-flick|is)|d-flick|ees|he(?:(?:es)?)|l(?:(?:b|he)es|[bcd])|thumb-cis|whisper)-key-stencil)|midline-rule|(?:rh-(?:bes|cis|f(?:(?:is)?)|gis|thumb-(?:bes|e|(?:[fg])is))|uber)-key-stencil))))|e(?:a(?:m(?:-(?:exceptions|markup)|::(?:align-with-broken-parts|get-kievan-(?:(?:(?:quantized-)?)positions)|place-broken-parts-individually|slope-like-broken-parts))|t-(?:grouping-internal|structure))|nd(?:-spanner::print|::(?:arrow-head-stencil|calc-(?:bend-x-(?:begin|end)|y-coordinates)|draw-curves|make-line-curve-stencil|print|remove-certain-tab-note-heads|t(?:arget-cautionary|ext-st(?:encil|ring))))|zier-head-for-stencil)|inary-search|o(?:ld-markup|o(?:k-first-page|lean-or-(?:(?:number|symbol)\\?))|unding-note-heads-pitches|x-(?:grob-stencil|markup|stencil))|r(?:acket(?:-markup|ify-stencil)|ea(?:k-align(?:able-interface::self-alignment-o(?:(?:(?:pposite-o)?)f-anchor)|ment-list)|the::midi-length))|uildflag)|c(?:a(?:ched-file-contents|esura-(?:script-interface::before-line-breaking|to-(?:(?:(?:bar-line-or-)?)divisio))|l(?:c(?:-(?:harmonic-pitch|line-thickness|repeat-slash-count)|ulate-(?:comp(?:lex-compound-time|ound-(?:b(?:ase-beat(?:(?:-full)?)|eat-grouping)|measure-length))|time-fraction))|l-after-session)|ps-markup|r(?:-or-identity|<(?:(?:=)?)))|dr-or-identity|enter(?:-(?:(?:alig|colum)n-markup)|ed-s(?:panner-interface::calc-x-offset|tencil))|h(?:a(?:in-assoc-get|nge-pitches|r-markup)|e(?:ap-(?:(?:list|markup)\\?)|ck-(?:b(?:eam-(?:quant|slope-sign)|roken-spanner)|context-path|division-alist|for-(?:annotation|replacement)|grob-path|music-path|pitch-against-signature|(?:quant|slope)-callbacks))|ord-(?:name->(?:(?:germ|itali)an-markup)|square::(?:height|print|width)))|ircle-(?:markup|stencil)|l(?:arinet-(?:(?:lh-(?:cis|ees|fis|gis|thumb|[Radef])|rh-(?:f(?:is|our)|gis|low-(?:cis|[cd])|one|t(?:hree|wo)|[bdef]))-key-stencil)|ef(?:-transposition-markup|::print-modern-tab-if-set)|ip(?:(?:-systems-to-region|ped-systems)-stencils)|ose-(?:enough\\?|port-rename))|o(?:da-markup|l(?:lect-(?:book(?:(?:-music|part)-for-book)|music-(?:aux|for-book)|scores-for-book)|or\\?|umn-(?:circle-stencil|lines-markup-list|markup))|m(?:bine-markup|p(?:ara(?:ble-note-events|tor-from-key)|ile-(?:all-markup-(?:(?:arg|expression)s)|markup-(?:arg|expression))|letize-(?:formats|grob-entry)|ound-meter-markup))|n(?:cat-markup|ditional-(?:kern-before|string-capitalize|trill-markup-markup)|figuration|s(?:-fret|t(?:ante-hairpin|ruct-chord-elements))|t(?:ext-(?:(?:defs-from|mod-from|spec)-music)|rol-po(?:(?:int::calc-offse|lygon::calc-tex)t)))|ord-(?:axis|rotate(?:(?:d)?)|scale|translate|[xy])|py-(?:binary-file|repeat-chord)|unt-list)|r(?:eate-(?:f(?:ile-exclusive|retboard)|glyph-flag)|oss-staff-connect)|ss-color|u(?:e-substitute|rrent-or-previous-voice-states|stomTabClef-markup)|yclic-base-value)|d(?:e(?:bugf|f(?:-grace-function|ault-(?:auto-beam-check|flag|paren-color)|ine-(?:bar-line|event-(?:class|function)|fonts|grob-property|internal-grob-property|m(?:arkup-(?:command(?:(?:-internal)?)|list-command)|usic-function)|s(?:cheme-function|ession(?:(?:-public)?)|yntax-(?:function|(?:(?:rule-)?)public))|tag-group|void-function))|gree(?:-first-true|s->radians)|scend-to-context|termine-(?:frets|s(?:plit-list|tring-fret-finger)))|i(?:m(?:-modifier|ension-arrows)|r-(?:basename|column-markup)|splay-(?:(?:(?:(?:lily|scheme)-)?)music))|o(?:decaphonic-no-repeat-rule|ne\\?|t(?:-(?:column-interface::pad-by-one-dot-width|has-color|is-(?:(?:invert|parenthesiz)ed))|s::calc-(?:dot-(?:count|stencil)|glyph-name|staff-position))|uble(?:(?:flat|sharp)-markup))|raw-(?:(?:circl|(?:(?:d(?:(?:ash|ott)ed-)|h|squiggle-)?)lin)e-markup)|u(?:mp-zombies|ration(?:(?:-(?:dot-factor|l(?:ength|ine::(?:calc(?:(?:-thickness)?)|print)|og-factor)|o(?:f-note|r-music\\?)|visual(?:(?:-length)?)))?))|ynamic-(?:markup|text-spanner::before-line-breaking))|e(?:l(?:bowed-hairpin|lipse-(?:markup|radius|stencil))|mpty-music|n(?:(?:d-broken-spanner|try-greater-than-x)\\?)|ps(?:-file->stencil|file-markup)|v(?:al-carefully|e(?:nt(?:-(?:c(?:ause|hord-(?:notes|pitches|reduce|wrap!)|lass-cons)|has-articulation\\?)|s)|ry-nth-(?:(?:bar-number|repeat-count)-visible)))|x(?:act-rational\\?|pand-repeat-(?:(?:chord|note)s!)|t(?:ent-combine|ract-(?:alteration|beam-exceptions|(?:(?:(?:nam|typ)ed-)?)music)))|yeglasses-markup)|f(?:ermata-markup|i(?:gured-bass-markup|ll(?:(?:-(?:line|with-pattern)|ed-box)-markup)|n(?:d-(?:named-props|pitch-entry|value-to-offset)|ger(?:-(?:glide::print|markup)|ing::calc-text))|rst-(?:assoc|b(?:ar-number-invisible(?:(?:-(?:(?:and-no-parenthesized-bar-numbe|save-broken-ba)rs))?)|roken-spanner\\?)|member|visible-markup))|l(?:a(?:red-hairpin|t(?:-(?:flag|markup)|ten-(?:(?:(?:a)?)list)))|(?:ip|ute-(?:(?:lh-(?:b(?:(?:es)?)|gis(?:(?:-rh-bes)?))|rh-(?:bes|cis|dis|ees|gz|[bcd]))-key))-stencil)|o(?:ld-some-music|nt(?:-(?:children|default|name-s(?:plit|tyle)|qualifier)|(?:Caps|size)-markup)|otnote-markup|r(?:-some-music|ced-configuration|mat(?:(?:-(?:bass-figure|co(?:da-mark|mpound-time)|dal-segno-text(?:(?:-brief)?)|m(?:ark-(?:alphabet|b(?:arnumbers|ox-(?:alphabet|(?:barnumb|lett|numb)ers))|circle-(?:alphabet|(?:barnumb|lett|numb)ers)|generic|(?:lett|numb)ers)|etronome-markup)|s(?:egno-mark(?:(?:-considering-bar-lines)?)|ign-with-number)|time-(?:element|fraction|list|numerator)|varcoda-mark))?)))|r(?:action(?:-(?:>moment|markup)|\\?)|et-(?:>pitch|board::calc-stencil|count|diagram-(?:(?:(?:(?:ter|verbo)se-)?)markup)|letter-tablature-format|number-tablature-format(?:(?:-banjo)?)|parse-(?:definition-string|marking-list|terse-definition-string))|omproperty-markup)|unction-chain)|g(?:-lookup-font|e(?:nera(?:l-(?:align-markup|column)|te-(?:bassoon-family-entry|c(?:larinet-family-entry|rop-stencil)|flute-family-entry|oboe-family-entry|preview-stencil|s(?:axophone-family-entry|ystem-stencils)|tin-whistle-family-entry))|t-(?:bound-note-heads|c(?:hord-shape|urrent-(?:filename|suffix))|fill-space|key|n(?:amed-spreadsheet-column|ext-unique-voice-name|umeric-from-key)|outfile-name|postscript-bbox|quarter-diffs|s(?:etting|lope-offset|p(?:an-glyph|readsheet-column)|tep|ub-list)|t(?:op-most-tab-head|weakable-music)|woodwind-key-list))|l(?:issando::(?:calc-tab-extra-dy|draw-tab-glissando)|yph-(?:>stencil|flag))|r(?:a(?:ce-spacing::calc-shortest-duration|y-colorize)|id-chord-name::calc-(?:X-offset|Y-offset|offset-on-axis)|o(?:b(?:-(?:interpret-markup|list\\?|transformer)|::(?:all-objects|c(?:alc-property-by-copy|ompose-function)|display-objects|has-interface|i(?:nherit-parent-property|s-live\\?)|name|o(?:bjects-from-interface|ffset-function)|r(?:elay-other-property|hythmic-location)|show-skylines-if-debug-skylines-set|unpure-Y-extent-from-stencil|when))|up-(?:(?:automate|draw|extra-offset)-rule)))|s-(?:cmd-args|safe-run))|h(?:a(?:irpin::calc-grow-direction|lign-markup|rp-pedal(?:-(?:check|info|markup)|s-parse-string)|s(?:-(?:(?:at-least-two|one-or-less)\\?)|h-table->alist))|bracket-markup|center-in-markup|eader(?:-to-file|s-property-alist-chain)|o(?:(?:ok-stenci|rizontal-slash-interva)l)|(?:spac|ug)e-markup)|i(?:f-markup|gnatzek-chord-names|n(?:dex(?:-(?:cell|or-markup\\?)|\\?)|sert-markups|ter(?:nal-set-paper-size|pret-markup(?:(?:-list)?)|val-(?:bound|c(?:enter|ontains\\?)|e(?:mpty\\?|nd)|in(?:dex|tersection)|length|s(?:ane\\?|cale|tart)|(?:unio|wide)n))|v(?:alidate-alterations|erter-factory))|s-(?:(?:absolut|squar)e\\?)|t(?:alic-markup|em::extra-spacing-height-including-staff))|justif(?:ied-lines-markup-list|y-(?:field-markup|line-(?:helper|markup)|(?:(?:string-)?)markup))|key(?:-(?:crawler|entry-(?:alteration|bar-number|end-mom|(?:notenam|octav)e)|fill-translate|list(?:(?:(?:-or-(?:music|symbol))?)\\?)|signature-interface::alteration-position(?:(?:s)?))|\\?|word->make-markup)|l(?:a(?:rge(?:(?:(?:r)?)-markup)|yout-(?:blot-diameter|extract-page-properties|line-thickness|set-(?:(?:absolute-staff-siz(?:(?:e-in-modul)?)|staff-siz)e)))|e(?:ft-(?:(?:align|brace|column)-markup)|xicographic-list-compare\\?)|h-woodwind-text-stencil|i(?:lypond-(?:all|file|main|version(?:(?:-outdated\\?)?))|ne-markup|st(?:-(?:all-possible-keys(?:(?:-verbose)?)|element-index|insert-separator|join)|ener->once-listener)|ttle-elliptical-key-stencil)|o(?:ng-midline-stencil|okup-(?:font|markup(?:(?:-(?:command(?:(?:-aux)?)|list-command))?)|paper-name)|w(?:-bass-clarinet-rh-ees-key-stencil|er-markup))|y(?:-(?:getcwd|type\\?)|:(?:a(?:ccidental-(?:interface::(?:h(?:eight|orizontal-skylines)|print|remove-tied)|placement::calc-positioning-done)|dd-(?:context-mod|interface|listener|option)|l(?:ign-interface::align-to-(?:(?:ideal|minimum)-distances)|l-(?:(?:grob-interface|o(?:ption|utput-backend-command)|stencil-(?:command|expression))s)|ternative-sequence-iterator::constructor)|ngle|pply-context-iterator::constructor|rpeggio::(?:brew-chord-(?:bracket|slur)|calc-(?:cross-staff|positions)|p(?:(?:rin|ure-heigh)t)|width)|ssoc-get|xis-group-interface::(?:ad(?:d-element|jacent-pure-heights)|c(?:alc-(?:pure-(?:relevant-grobs|staff-staff-spacing|y-common)|s(?:kylines|taff-staff-spacing)|(?:[xy])-common)|ombine-skylines)|height|pure-height|width))|b(?:a(?:lloon-interface::(?:p(?:(?:rin|ure-heigh)t)|remove-irrelevant-spanner|width)|r-(?:check-iterator::constructor|line::(?:calc-(?:anchor|bar-extent)|print))|sic-progress)|e(?:am::(?:calc-(?:beam(?:-segments|ing)|cross-staff|direction|normal-stems|stem-shorten|x-positions)|p(?:rint|ure-rest-collision-callback)|quanting|rest-collision-callback|set-stem-lengths)|zier-ext(?:(?:en|rac)t))|ook(?:-(?:add-(?:(?:bookpart|score)!)|book-parts|header|p(?:aper|rocess(?:(?:-to-systems)?))|s(?:cores|et-header!))|\\?)|p|r(?:acket|ea(?:k-align(?:able-interface::(?:find-parent|self-align-callback)|ed-interface::calc-(?:average-anchor|break-visibility|extent-aligned-anchor|joint-anchor-alignment)|ment-interface::(?:calc-positioning-done|find-nonempty-break-align-group))|thing-sign::(?:divisio-m(?:a(?:ior|xima)|inima)|finalis|offset-callback|set-breath-properties))|oadcast))|c(?:a(?:iro-output-stencil(?:(?:s)?)|lculated-sequential-music::(?:length|start)|mel-case->lisp-identifier)|h(?:a(?:in-assoc-get|nge-iterator::constructor)|eck-expected-warnings|ord-name::after-line-breaking)|l(?:ef(?:-modifier::calc-parent-alignment|::(?:calc-glyph-name|print))|uster(?:-beacon::height|::(?:calc-cross-staff|print)))|m|o(?:mmand-line-(?:code|options)|n(?:nect-dispatchers|text(?:-(?:current-moment|def(?:-(?:lookup|modify)|\\?)|event(?:-source|s-below)|find|grob-definition|id|m(?:atched-pop-property|od(?:-apply!|\\?))|name|output-def|p(?:arent|roperty(?:(?:-where-defined)?)|ushpop-property)|s(?:et-property!|pecced-music-iterator::constructor)|unset-property)|\\?)))|ustos::print)|d(?:e(?:bug|fault-scale)|i(?:mension\\?|r(?:\\?|ected)|s(?:connect-dispatchers|patcher\\?))|ot(?:-column::calc-positioning-done|s::print)|uration(?:-(?:>string|compress|dot-count|factor|l(?:ength|og)|scale)|(?:(?:::less|<)?)\\?))|e(?:ffective-prefix|n(?:closing-bracket::(?:print|width)|graver-(?:announce-end-grob|make-(?:grob|item|s(?:panner|ticky))))|rror|vent(?:-(?:chord-iterator::constructor|deep-copy|iterator::constructor|property|set-property!|warning)|\\?)|x(?:it|pect-warning|tract-subfont-from-collection))|f(?:i(?:gured-bass-continuation::(?:center-on-figures|print)|n(?:d-file|e-iterator::constructor|gering-column::calc-positioning-done))|lag::(?:calc-(?:(?:[xy])-offset)|glyph-name|p(?:(?:rin|ure-calc-y-offse)t)|width)|o(?:nt-(?:config-(?:add-(?:directory|font)|display-fonts|get-font-file)|design-size|file-name|g(?:et-glyph|lyph-name-to-(?:charcode|index))|index-to-charcode|m(?:agnification|etric\\?)|name|sub-fonts)|rmat(?:(?:-output)?)))|g(?:e(?:neric-bound-extent|t-(?:all-(?:function-documentation|translators)|c(?:ff-offset|ontext-mods)|font-format|option|spacing-spec))|r(?:ace-(?:iterator::constructor|music::start-callback)|id-line-interface::(?:print|width)|ob(?:-(?:a(?:list-chain|rray(?:-(?:>list|length|ref)|\\?))|basic-properties|c(?:hain-callback|ommon-refpoint(?:(?:-of-array)?))|default-font|extent|get-vertical-axis-group-index|interfaces|l(?:ayout|ist->grob-array)|o(?:bject|riginal)|p(?:arent|q<\\?|ropert(?:ies\\?|y(?:(?:-data)?))|ure-(?:height|property))|r(?:elative-coordinate|obust-relative-extent)|s(?:cript-priority-less|et-(?:(?:nested-property|object|p(?:arent|roperty))!)|panned-column-rank-interval|taff-position|uicide!|ystem)|translate-axis!|vertical<\\?|warning)|::(?:horizontal-skylines-from-(?:element-stencils|stencil)|pure-(?:horizontal-skylines-from-element-stencils|s(?:imple-(?:(?:horizont|vertic)al-skylines-from-extents)|tencil-height)|vertical-skylines-from-element-stencils)|s(?:imple-(?:(?:horizont|vertic)al-skylines-from-extents)|tencil-(?:height|width))|vertical-skylines-from-(?:element-stencils|stencil)|(?:[xy])-parent-positioning)|\\?))|s-cli|ulp-file(?:(?:-utf8)?))|h(?:a(?:irpin::(?:broken-bound-padding|p(?:(?:rin|ure-heigh)t))|ra-kiri-group-spanner::(?:calc-skylines|force-hara-kiri-(?:(?:(?:in-y-parent-)?)callback)|(?:pure-heigh|y-exten)t)|s(?:-glyph-names\\?|h-table-keys))|orizontal-(?:bracket(?:-text::(?:calc-direction|print)|::print)|line-spanner::calc-(?:left-bound-info(?:(?:-and-text)?)|right-bound-info)))|i(?:n(?:-event-class\\?|ch|put-(?:both-locations|file-line-char-column|location\\?|message|warning)|t(?:erpret-music-expression|log2))|te(?:m(?:-(?:break-dir|get-column)|\\?)|rator\\?))|k(?:(?:ey-signature-interfac|ievan-ligatur)e::print)|l(?:e(?:dger-line-spanner::(?:print|set-spacing-rods)|ngth)|i(?:ly-(?:(?:lex|pars)er\\?)|ne-(?:interface::line|spanner::(?:calc-(?:cross-staff|left-bound-info(?:(?:-and-text)?)|right-bound-info)|print))|st(?:->offsets|ene(?:d-event-(?:class\\?|types)|r\\?)))|oad|yric-(?:combine-music(?:-iterator::constructor|::length-callback)|extender::print|hyphen::(?:print|set-spacing-rods)))|m(?:ake-(?:book(?:(?:-part)?)|context-mod|d(?:ispatcher|uration)|event-class|g(?:lobal-(?:context|translator)|rob-properties)|listener|m(?:oment|usic(?:(?:-(?:function|relative!))?))|output-def|p(?:a(?:ge-(?:(?:label|permission)-marker)|ngo-description-string|per-outputter)|itch|rob)|rotation|s(?:c(?:al(?:e|ing)|ore)|kyline|pring|t(?:encil|ream-event))|trans(?:form|lation)|unpure-pure-container)|e(?:asure-(?:grouping::print|spanner::(?:calc-connect-to-neighbors|print))|lody-spanner::calc-neutral-stem-direction|nsural-ligature::(?:brew-ligature-primitive|print)|ssage)|inimal-breaking|m|o(?:dule(?:-(?:>alist|copy)|s-lookup)|ment(?:-(?:add|div|grace(?:(?:-(?:(?:denomin|numer)ator))?)|m(?:ain(?:(?:-(?:(?:denomin|numer)ator))?)|od|ul)|sub)|(?:(?:<)?)\\?))|u(?:lti-measure-rest::(?:height|print|set-(?:(?:spacing|text)-rods))|sic(?:-(?:compress|d(?:eep-copy|uration-(?:compress|length))|error|function(?:-(?:extract|signature)|\\?)|iterator::constructor|l(?:ength|ist\\?)|m(?:essage|utable-properties)|output\\?|property|s(?:e(?:quence::(?:(?:cumulative-length|event-chord-(?:length|relative)|first-start|m(?:aximum-length|inimum-start)|simultaneous-relative)-callback)|t-property!)|tart)|transpose|w(?:arning|rapper(?:-iterator::constructor|::(?:(?:length|start)-callback))))|::duration-length-callback|\\?)))|n(?:o(?:n-fatal-error|te-(?:col(?:lision-interface::calc-positioning-done|umn(?:-(?:accidentals|dot-column)|::calc-main-extent))|extra-source-file|head::(?:(?:calc-(?:(?:(?:tab-)?)stem-attachmen)|include-ledger-line-heigh|prin|stem-(?:attachmen|x-shif))t)))|umber-(?:(?:(?:pair-)?)>string))|o(?:ne-(?:(?:line(?:(?:-auto-height)?)|page)-breaking)|pti(?:mal-breaking|on-usage)|t(?:f-(?:>cff|font(?:-(?:glyph-info|table-data)|\\?)|glyph-(?:(?:coun|lis)t))|tava-bracket::print)|utput(?:-(?:de(?:f(?:-(?:clone|lookup|parent|s(?:cope|et-variable!))|\\?)|scription)|find-context-def)|ter-(?:close|dump-st(?:encil|ring)|output-scheme|port)))|p(?:a(?:ge-(?:marker\\?|turn-breaking)|ngo-font(?:-physical-fonts|\\?)|per-(?:book(?:-(?:header|p(?:a(?:ges|per)|erformances)|s(?:(?:cope|ystem)s))|\\?)|column::(?:break-align-width|print)|fonts|get-(?:font|number)|outputscale|s(?:core-paper-systems|ystem(?:-minimum-distance|\\?)))|r(?:se(?:-(?:file|init|string-expression)|d-undead-list!|r-(?:cl(?:ear-error|one)|define!|error|has-error\\?|include-string|lookup|output-name|parse-string|set-note-names))|t(?:-combine-iterator::constructor|ial-iterator::(?:constructor|finalization))))|er(?:cent-repeat-i(?:nterface::(?:beat-slash|(?:(?:double-)?)percent)|terator::constructor)|form(?:-text-replacements|ance-(?:headers|write)))|i(?:ano-pedal-bracket::print|tch(?:-(?:alteration|diff|n(?:(?:egat|otenam)e)|octave|quartertones|s(?:(?:emitone|tep)s)|t(?:ones|ranspose))|(?:(?:::less|<)?)\\?))|o(?:inter-group-interface::add-grob|p-property-iterator::constructor|sition-on-line\\?)|ro(?:b(?:-(?:immutable-properties|mutable-properties|property(?:(?:\\?)?)|set-property!|type\\?)|\\?)|gr(?:amming-error|ess)|perty-(?:iterator::constructor|lookup-stats|unset-iterator::constructor))|t|u(?:re-(?:call|from-neighbor-interface::calc-pure-relevant-grobs)|sh-property-iterator::constructor))|quote-iterator::constructor|r(?:andomize-rand-seed|e(?:gister-(?:stencil-expression|translator)|lative-(?:group-extent|octave-(?:(?:check::|music::(?:(?:no-)?))relative-callback))|name-file|s(?:et-all-fonts|t(?:-collision::(?:calc-positioning-done|force-shift-callback-rest)|::(?:calc-cross-staff|height|p(?:(?:rin|ure-heigh)t)|width|y-offset-callback))))|hythmic-music-iterator::constructor|ound-(?:filled-box|polygon)|un-translator)|s(?:c(?:ore(?:-(?:add-output-def!|e(?:mbedded-format|rror\\?)|header|music|output-defs|set-header!)|\\?)|ript-(?:column::(?:(?:(?:row-)?)before-line-breaking)|interface::(?:calc-(?:cross-staff|direction|positioning-done)|print)))|e(?:lf-alignment-interface::(?:aligned-on-(?:(?:[xy])-parent)|centered-on-(?:(?:[xy])-parent)|(?:pure-y|[xy])-aligned-on-self)|mi-tie(?:-column::calc-(?:head-direction|positioning-done)|::calc-control-points)|paration-item::calc-skylines|quential-iterator::constructor|t-(?:color-names|default-scale|grob-(?:(?:cre|modific)ation-callback)|middle-C!|o(?:ption|rigin!)|property-cache-callback))|i(?:de-position-interface::(?:calc-cross-staff|move-to-extremal-staff|pure-y-aligned-side|set-axis!|(?:[xy])-aligned-side)|m(?:(?:ple|ultaneous)-music-iterator::constructor))|kyline(?:-(?:>points|distance|empty\\?|height|m(?:ax-height(?:(?:-position)?)|erge)|pa(?:d|ir\\?)|touching-point)|\\?|s-for-stencil)|lur::(?:calc-(?:c(?:ontrol-points|ross-staff)|direction)|height|outside-slur-c(?:allback|ross-staff)|p(?:rint|ure-(?:height|outside-slur-callback)))|mob-protects|o(?:lve-spring-rod-problem|urce-file(?:[?s]))|p(?:a(?:cing-spanner::(?:calc-common-shortest-duration|set-springs)|n(?:-bar::(?:before-line-breaking|c(?:alc-(?:anchor|glyph-name)|hoose-model-bar-line)|print|width)|ner(?:-(?:b(?:ound|roken-into)|set-bound!)|::(?:bounds-width|calc-normalized-endpoints|kill-zero-spanned-time|set-spacing-rods)|\\?))|wn)|ring(?:-set-inverse-(?:(?:compress|stretch)-strength!)|\\?))|t(?:aff-symbol(?:-(?:line-thickness|referencer::callback|staff-(?:radius|space))|::(?:(?:heigh|prin)t))|derr-redirect|e(?:m(?:-tremolo::(?:calc-(?:cross-staff|direction|s(?:(?:ha|lo)pe)|width|y-offset)|p(?:(?:rin|ure-(?:calc-y-offse|heigh))t)|width)|::(?:calc-(?:cross-staff|d(?:(?:(?:efault-d)?)irection)|length|positioning-done|stem-(?:begin-position|end-position|info))|height|offset-callback|p(?:rint|ure-(?:calc-(?:length|stem-(?:(?:begin|end)-position))|height))|width))|ncil(?:-(?:a(?:dd|ligned-to)|combine-at-edge|e(?:mpty\\?|x(?:pr|tent))|in-color|outline|rotate(?:(?:-absolute)?)|s(?:cale|tack)|translate(?:(?:-axis)?))|\\?))|r(?:eam-event\\?|ing-(?:(?:percent-encod|substitut)e)))|ustain-pedal::print|ystem(?:(?:-(?:font-load|start-delimiter::print)|::(?:calc-pure-(?:height|relevant-grobs)|footnotes-(?:(?:after|before)-line-breaking)|get-(?:nonspaceable-staves|s(?:(?:(?:paceable-s)?)taves)|vertical-alignment)|height|vertical-skyline-elements))?))|t(?:ext-interface::(?:interpret-(?:markup|string)|print)|i(?:e(?:-column::(?:before-line-breaking|calc-positioning-done)|::(?:calc-(?:control-points|direction)|print))|me-signature::print)|rans(?:form(?:->list|\\?)|lat(?:e-cpp-warning-scheme|or(?:-(?:context|description|group\\?|name)|\\?))|pose-key-alist)|tf-(?:>pfa|ps-name)|uplet-(?:bracket::(?:calc-(?:c(?:onnect-to-neighbors|ross-staff)|direction|(?:(?:x-)?)positions)|print)|iterator::constructor|number::(?:calc-(?:cross-staff|(?:[xy])-offset)|print))|ype1->pfa)|u(?:n(?:it|pure-(?:call|pure-container(?:-(?:(?:(?:un)?)pure-part)|\\?)))|sage)|v(?:aticana-ligature::(?:brew-ligature-primitive|print)|er(?:bose-output\\?|sion(?:(?:\\?)?))|o(?:lta-(?:bracket(?:-interface::print|::calc-shorten-pair)|(?:repeat|specced-music)-iterator::constructor)|wel-transition::set-spacing-rods))|w(?:arning(?:(?:-located)?)|ide-char->utf-8))|ric-(?:hyphen::vaticana-style|text::print)))|m(?:a(?:g(?:nif(?:ication->font-size|y(?:-markup|Staff-is-set\\?))|step)|j7-modifier|ke-(?:a(?:bs-fontsize-markup|ccidental-(?:dodecaphonic-rule|markup|rule)|lign-on-other-markup|pply-context|r(?:row-head-markup|ticulation)|uto(?:-footnote-markup|change-music))|b(?:ackslashed-digit-markup|e(?:am-markup|zier-sandwich-stencil)|o(?:ld-markup|w-stencil|x-markup)|racket-(?:bar-line|markup))|c(?:-time-signature-markup|aps-markup|ent(?:er-(?:(?:alig|colum)n-markup)|ral-column-hole-addresses)|h(?:ar-markup|ord-elements)|ircle-(?:markup|stencil)|lef-set|o(?:da-markup|l(?:o(?:n-bar-line|r-handler)|umn-(?:lines-markup-list|markup))|m(?:(?:bine|pound-meter)-markup)|n(?:cat-markup|ditional-trill-markup-markup|nected-(?:line|path-stencil)))|u(?:e-clef-(?:(?:(?:un)?)set)|stomTabClef-markup))|d(?:ashed-bar-line|efault-fonts-tree|ir-column-markup|o(?:tted-bar-line|uble(?:(?:flat|sharp)-markup))|raw-(?:(?:circl|(?:(?:d(?:(?:ash|ott)ed-)|h|squiggle-)?)lin)e-markup)|uration-of-length|ynamic-markup)|e(?:llipse-(?:markup|stencil)|mpty-bar-line|ngraver|psfile-markup|vent-chord|xtended-scale|yeglasses-markup)|f(?:ermata-markup|i(?:gured-bass-markup|ll(?:-(?:(?:line|with-pattern)-markup)|ed-box-(?:markup|stencil))|(?:nger|rst-visible)-markup)|lat-markup|o(?:nt(?:-tree-(?:leaf|node)|(?:Caps|size)-markup)|otnote-markup)|r(?:action-markup|et-diagram(?:(?:-(?:(?:(?:(?:ter|verbo)se-)?)markup))?)|omproperty-markup))|g(?:eneral-align-markup|lyph-time-signature-markup|r(?:ace(?:-music|less-rhythmic-location)|ob-property-(?:override|(?:rever|se)t)))|h(?:a(?:lign-markup|r(?:monic|p-pedal-markup))|(?:bracket|center-in|(?:spac|ug)e)-markup)|i(?:(?:f|talic)-markup)|justif(?:ied-lines-markup-list|y-(?:(?:(?:(?:field|line|string)-)?)markup))|k(?:ey-(?:alist|symbols)|ievan-bar-line)|l(?:arge(?:(?:(?:r)?)-markup)|eft-(?:align-markup|brace-markup|column-markup|hand-key-addresses)|ine-(?:markup|stencil)|o(?:(?:okup|wer)-markup)|yric-(?:event|repeat-count-formatter))|m(?:a(?:gnify-markup|p-markup-commands-markup-list|rk(?:(?:(?:(?:alphabet|letter)-mark)?)up))|edium-markup|odal-(?:(?:invert|transpos)er)|u(?:lti-measure-rest(?:(?:-by-number-markup)?)|sic(?:(?:glyph-markup)?)))|n(?:a(?:me(?:(?:-keylis|d-spreadshee)t)|tural-markup)|o(?:-bar-line|n-relative-music|(?:rmal(?:-(?:size-su(?:b|per)|text)|size)|te(?:(?:-by-number)?))-markup)|u(?:ll-markup|mber-(?:keylist|markup)))|o(?:n-the-fly-markup|v(?:al-(?:markup|stencil)|er(?:lay-markup|ride-(?:lines-markup-list|markup)|tie-markup)))|p(?:a(?:d-(?:(?:around|markup|(?:(?:to-bo)?)x)-markup)|ge-(?:(?:link|ref)-markup)|ngo-font-tree|r(?:enthesi(?:s-stencil|ze-markup)|t(?:-combine-(?:(?:context-change|mark)s)|ial-ellipse-stencil))|t(?:h-(?:markup|stencil)|tern-markup))|er(?:cent-set|former)|o(?:(?:lygon|stscript)-markup)|roperty-(?:recursive-markup|(?:(?:un)?)set)|ut-adjacent-markup)|r(?:aise-markup|e(?:lative(?:(?:::to-relative-callback)?)|p(?:eat|lace-markup)|st-(?:(?:(?:by-number-)?)markup))|hythm(?:-markup|ic-location)|ight-(?:align-markup|brace-markup|column-markup|hand-key-addresses)|o(?:(?:man|tate|unded-box)-markup))|s(?:ans-markup|c(?:ale(?:(?:-markup)?)|ore-(?:lines-markup-list|markup))|e(?:gno-(?:bar-line|markup)|mi(?:flat-markup|sharp-markup|tone->pitch)|quential-music|s(?:qui(?:(?:flat|sharp)-markup)|sion-variable)|tting)|h(?:arp-markup|ort-bar-line)|im(?:ple-(?:bar-line|markup)|ultaneous-music)|kip(?:-music|ped)|lashed-digit-markup|mall(?:(?:(?:Caps|er)?)-markup)|p(?:a(?:cer-bar-line|n-event)|lit-state|readsheet)|t(?:e(?:m-span(?:(?:(?:s)?)!)|ncil-(?:boxer|circler|markup))|r(?:ing-lines-markup-list|ut-markup))|u(?:(?:b|per)-markup)|ymbol-alist)|t(?:ab(?:(?:-heads-transparen|le-markup-lis)t)|e(?:(?:eny|xt)-markup)|hick-bar-line|i(?:ck-bar-line|e(?:-(?:markup|stencil)|d-lyric-markup)|lted-portion|me-signature-set|ny-markup)|mpfile|r(?:ans(?:lat(?:e-(?:(?:(?:scaled-)?)markup)|or(?:(?:-(?:component|internal))?))|parent-(?:box-stencil|markup))|emolo-set|iangle-markup)|ype(?:-checker|writer-markup))|u(?:n(?:der(?:(?:lin|ti)e-markup)|folded-set|less-markup)|pright-markup)|v(?:arcoda-markup|center-markup|erbatim-file-markup|o(?:ice-(?:props-(?:override|(?:rever|se)t)|states)|lta-set)|space-markup)|w(?:hiteout-markup|ith-(?:(?:color|dimension(?:(?:-from|s(?:(?:-from)?))?)|link|outline|string-transformer|true-dimension(?:(?:s)?)|url)-markup)|o(?:odwind-diagram-markup|rdwrap-(?:field-markup|internal-markup-list|lines-markup-list|markup|string-(?:internal-markup-list|markup)))))|p-(?:alist-(?:(?:key|val)s)|markup-commands-markup-list|s(?:elected-alist-keys|ome-music))|rk(?:alphabet-markup|ed-up-(?:headfoot|title)|generic-string|letter-markup|up(?:(?:-(?:>string|argument-list(?:-error|\\?)|command-(?:list\\?|signature)|default-to-string-method|expression->make-markup|function(?:-(?:as-string-method|category|properties)|\\?)|join|l(?:ambda(?:(?:-(?:listify|worker))?)|ist(?:-(?:function\\?|lambda)|\\?))|t(?:hrower-typecheck|ypecheck\\?))|\\?)?))|tch-predicate)|e(?:asure-counter::text|dium-markup|nsural-flag|rge-details|tronome-markup)|i(?:d(?:dle-broken-spanner\\?|i-program|line-stencil)|nor-modifier)|kdir-if-not-exist|m(?:-rest-child-list|rest-of-length)|o(?:d(?:ern-straight-flag|ified-font-metric-font-scaling|ulo-bar-number-visible)|ment(?:(?:-(?:>fraction|min|pair\\?)|<=\\?)?)|ve-chord-note)|u(?:lti-(?:fork|measure-rest-by-number-markup)|sic(?:-(?:>make-music|c(?:heck-error|lone)|filter|i(?:nvert|s-of-type\\?)|map|p(?:itches|roperty-description)|se(?:lective-(?:filter|map)|parator\\?)|type-predicate)|glyph-markup)))|n(?:-true-entries|a(?:rrow-glyph\\?|tural-(?:chord-alteration|markup))|e(?:gate-extent|o-modern-accidental-rule)|o(?:-flag|rmal(?:-(?:flag|(?:size-su(?:b|per)|text)-markup)|ize-fraction|size-markup)|t(?:-(?:(?:fir|la)st-broken-spanner\\?)|e(?:-(?:by-number-markup|events|head::(?:brew-ez-stencil|calc-(?:duration-log|glyph-name|kievan-duration-log))|markup|name(?:-(?:>(?:german-markup|markup|string)|markup)|s-language)|to-cluster)|s-to-clusters)))|u(?:ll-markup|m(?:ber(?:-(?:>octal-string|column-stencil|format|list\\?|markup|(?:or-(?:grob|pair|string)|pair(?:(?:-list)?))\\?)|ed-footnotes)|erify)))|o(?:b(?:ject-type(?:(?:-name)?)|oe-(?:(?:lh-(?:II(?:(?:I)?)|bes|cis|ees(?:(?:-lh-bes)?)|gis(?:(?:-lh-low-b)?)|low-b|octave|[Ibdf])|rh-(?:banana|(?:c(?:-rh-ee|i)|ee|gi)s|[acdf]))-key-stencil))|ctave-woodwind-text-stencil|ffset(?:-(?:add|f(?:lip-y|ret)|multiple-types|scale)|ter)|ld-straight-flag|n(?:-the-fly-markup|ly-if-beamed)|rdered-cons|ther-axis|utput(?:-(?:module\\?|scopes)|property-compatibility)|v(?:al-(?:markup|stencil)|er(?:lay-markup|ride-(?:head-style|lines-markup-list|markup|(?:property|time-signature)-setting)|tie-markup)))|p(?:a(?:d-(?:(?:around|markup|(?:(?:to-bo)?)x)-markup)|ge-(?:(?:link|ref)-markup)|ir-map|ngo-(?:font-name|pf-f(?:ile-name|ont(?:-name|index)))|per-variable|r(?:enthes(?:es-interface::(?:calc-(?:(?:angled-bracket|parenthesis)-stencils)|(?:pri|y-exte)nt)|ize-(?:elements|markup|stencil))|se-(?:and-check-version|lily-version|terse-string))|t(?:(?:h|tern)-markup))|er(?:cussion\\?|formance-name-from-headers)|i(?:ccolo-rh-x-key-stencil|tch-(?:alteration-semitones|invert|of-note|step))|o(?:l(?:ar->rectangular|ygon-markup)|s(?:ition-true-endpoint|t(?:process-output|script-(?:>p(?:df|ng|s)|markup))))|r(?:e(?:compute-music-length|pend-(?:alist-chain|props)|tty-printable\\?|vious-(?:(?:span|voice)-state))|int-(?:book-with(?:(?:-defaults(?:(?:-as-systems)?))?)|circled-text-callback|keys(?:(?:-verbose)?))|o(?:cess-fill-value|perty-recursive-markup))|u(?:re-(?:chain-offset-callback|from-neighbor-interface::(?:account-for-span-bar|extra-spacing-height(?:(?:-(?:at-beginning-of-line|including-staff))?)|pure-height))|t-adjacent-markup))|qu(?:arterdiff->string|ote-substitute)|r(?:a(?:ise-markup|ndomize-rand-seed|tio(?:->(?:fret|pitch)|nal-or-procedure\\?))|e(?:ad-lily-expression(?:(?:-internal)?)|c(?:ent-enough\\?|o(?:mpute-music-length|rding-group-emulate))|gexp-split|levant-(?:(?:book|dump)-systems)|move-(?:grace-property|step|whitespace)|p(?:eat-tie::handle-tab-note-head|l(?:ace-(?:(?:marku|ste)p)|icate-modify))|s(?:et-stencil-colors|t-(?:(?:(?:by-number-)?)markup))|t(?:r(?:ieve-glyph-flag|ograde-music)|urn-1)|ver(?:se-interval|t-(?:fontSize|head-style|prop(?:erty-setting|s)|time-signature-setting)))|gb-color|h(?:-woodwind-text-stencil|ythm(?:-markup|ic-location(?:-(?:>(?:(?:(?:file-)?)string)|bar-number|measure-position)|(?:(?:(?:[<>])=|[<=>])?)\\?)))|i(?:ch-(?:bassoon-uber-key-stencil|e-stencil|group-(?:(?:draw|extra-offset)-rule)|p(?:(?:ath|e)-stencil))|ght-(?:(?:align|brace|column)-markup)|ng-column-circle-stencil)|o(?:bust-bar-number-function|man-markup|tate-markup|unded-box-(?:markup|stencil)))|s(?:a(?:ns-(?:markup|serif-stencil)|xophone-(?:lh-(?:(?:b(?:(?:-ci|e)s)|cis|ees|front-f|gis|low-(?:a|bes)|[Tbdf])-key-stencil)|name-passerelle|rh-(?:(?:bes|ees|fis|high-fis|low-c|side|[ce])-key-stencil)))|c(?:ale(?:-(?:>factor|b(?:eam-thickness|y-font-size)|fontSize|layout|markup|props)|\\?)|heme\\?|m->string|or(?:e-(?:lines-markup-list|markup)|ify-music)|ript-(?:interface::calc-x-offset|or-side-position-cross-staff))|e(?:arch-executable|conds->moment|gno-markup|l(?:ect-(?:head-glyph|option)|f-(?:alignment-interface::self-aligned-on-breakable|evaluating\\?))|mi(?:-tie::calc-cross-staff|(?:flat|sharp)-markup)|quential-music-to-chord-exceptions|s(?:qui(?:(?:flat|sharp)-markup)|sion-(?:replay|s(?:ave|tart-record)|terminate))|t-(?:accidental-style|bar-number-visibility|counter-text!|default-paper-size|global-(?:fonts|staff-size)|mus-properties!|output-property|paper-(?:dimension(?:(?:(?:-variable)?)s)|size)))|h(?:arp-markup|ift-(?:duration-log|o(?:ctave|ne-duration-log)|right-at-line-begin|semitone->pitch)|ort-glyph\\?)|i(?:gn|lence-events|mple-(?:markup|stencil-alist))|k(?:ip-(?:>rest|as-needed|of-(?:length|moment-span))|yline-pair(?:(?:-and-non-|::)empty\\?))|lash(?:ed-digit-(?:internal|markup)|ify)|mall(?:(?:(?:Caps|er)?)-markup)|p(?:a(?:ce-lines|n-(?:(?:bar::compound-bar-lin|stat)e))|lit-(?:at-predicate|index|list(?:(?:-by-separator)?)))|t(?:a(?:ck-(?:lines|stencil(?:-line|s(?:(?:-padding-list)?))|thirds)|ff-(?:ellipsis::(?:(?:calc-y-exte|pri)nt)|highlight::(?:height|print|width)|magnification-is-changing\\?|symbol(?:-(?:line-(?:count|positions|span)|y-extent-from-line-positions)|::calc-widened-extent))|ndard-(?:(?:e|path)-stencil))|derr|e(?:m(?:-(?:connectable\\?|is-root\\?|s(?:pan-stencil|tub::(?:do-calculations|extra-spacing-height|pure-height|width))|tremolo::calc-tab-width)|::(?:calc-duration-log|kievan-offset-callback))|ncil-(?:fretboard-(?:(?:exten|offse)t)|markup|true-extent|w(?:hiteout(?:(?:-(?:box|outline))?)|ith-color)))|icky-grob-interface::inherit-property|r(?:aight-flag|i(?:ng-(?:>string-list|en(?:code-integer|dswith)|lines-markup-list|number::calc-text|or-(?:(?:music|pair|symbol)\\?)|regexp-substitute|startswith|thickness)|p-string-annotation)|oke-finger::calc-text|ut-markup)|yle-note-heads)|u(?:b(?:-markup|tract-base-fret)|ggest-convert-ly-message|per-markup|s-modifier)|y(?:m(?:bol(?:-(?:concatenate|footnotes|(?:key(?:-alist|<)|list(?:(?:-or-(?:music|symbol))?))\\?)|<\\?)|link-(?:(?:(?:or-copy-)?)if-not-exist)|metric-interval)|nced\\?|stem-start-text::(?:(?:calc-(?:(?:[xy])-offse)|prin)t)))|t(?:a(?:b(?:-note-head::(?:calc-glyph-name|print(?:(?:-custom-fret-label)?)|whiteout-if-style-set)|l(?:ature-position-on-lines|e-markup-list)|voice::(?:(?:draw-double-stem|make-double-stem-width)-for-half-notes))|g(?:-group-get|s-(?:(?:keep|remove)-predicate)))|e(?:aching-accidental-rule|eny-markup|xt-(?:fill-translate|mark(?:-interface::calc-(?:break-visibility|self-alignment-X)|up)))|i(?:e(?:-markup|::handle-tab-note-head|d-lyric-markup)|ny-markup)|r(?:ans(?:lat(?:e-(?:draw-instructions|key-instruction|(?:(?:scaled-)?)markup)|or-property-description)|p(?:arent-markup|oser-factory))|i(?:angle-markup|ll-pitch-group::pure-height)|ue-entry\\?)|u(?:ning|plet-number::(?:append-note-wrapper|calc-(?:d(?:enominator-text|irection)|fraction-text)|fraction-with-notes|non-default-(?:fraction-with-notes|tuplet-(?:(?:denominator|fraction)-text))))|ype(?:-name|writer-markup))|u(?:n(?:broken-(?:(?:(?:or-(?:(?:fir|la)st-broken-))?)spanner\\?)|der(?:(?:lin|ti)e-markup)|fold-repeats(?:(?:-fully)?)|i(?:form-(?:draw-instructions|extra-offset-rule)|q(?:(?:-|ued-a)list)|ty-if-multimeasure|versal-color)|less-markup)|p(?:date-possb-list|per-key-stencil|right-markup))|v(?:a(?:lue-for-spanner-piece|r(?:coda-markup|iable-column-circle-stencil))|center-markup|e(?:ctor-for-each|r(?:batim-file-markup|sion-not-seen-message))|o(?:i(?:c(?:e-states|ify-(?:chord|list|music))|d\\?)|lta-(?:bracket(?:-interface::pure-height|::calc-hook-visibility)|spec-music))|space-markup)|w(?:hiteout-markup|ith-(?:(?:color|dimension(?:(?:-from|s(?:(?:-from)?))?)|link|outline|string-transformer|true-dimension(?:(?:s)?)|url)-markup)|o(?:odwind-diagram-markup|rdwrap-(?:field-markup|internal-markup-list|lines-markup-list|markup|st(?:encils|ring-(?:internal-markup-list|markup))))|rite-(?:lilypond-book-aux-files|me|performances-midis))|x11-color|[bg])(?!-?[[:alpha:]])"
          }
          {include: "#scheme_embedded_lilypond"}
          {include: "#scheme_expression"}
          {include: "source.lisp"}
        ]
      }
    ]

  scheme_embedded_lilypond:
    patterns: [
      {
        name:  "meta.embedded-lilypond.lilypond"
        begin: "#\\{"
        end:   "#}"
        beginCaptures: 0: name: "punctuation.definition.embedded-lilypond.begin.lilypond"
        endCaptures:   0: name: "punctuation.definition.embedded-lilypond.end.lilypond"
        patterns: [
          {include: "source.lilypond"}
        ]
      }
    ]
